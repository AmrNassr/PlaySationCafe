/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hany;

import Store.additem;
import Store.addstore;
import Store.addsupplier;
import Store.moveorder;
import Store.paysupplier;
import Store.sellreporttype;
import Store.storebuyreport;
import Store.storeitems;
import Store.storesellreport;
import Store.storetype;
import Store.supplieramountdetails;
import Store.supplieramountdetailspayed;
import Store.supplierpayed;
import java.awt.Color;
import java.awt.ComponentOrientation;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.Map;
import java.util.TimeZone;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author amnassar
 */
public class Home extends javax.swing.JFrame {

    /**
     * Creates new form Home
     */
    LoginForm l;

    PreparedStatement pst;
    ResultSet rs;
    public String y;
    public String type;
    public static people peoplee;
    private ImageIcon icon;
    public Calendar cal;
    String dayyy;
    String dayyy2;
    public String datee;
    public String fulldatee;

    public Home(String x) throws IOException, ParseException {
        initComponents();
        icon = new ImageIcon(getClass().getResource("playstation.png"));
        this.setIconImage(icon.getImage());
        name11.setText(x);
        name11.setVisible(true);
        y = x;
        cal = new GregorianCalendar();
        peoplee = new people();
        cal = new GregorianCalendar();
        int dayy = cal.get(Calendar.DAY_OF_MONTH);
        dayyy = String.valueOf(dayy);
        if (dayy == 1 || dayy == 2 || dayy == 3 || dayy == 4
                || dayy == 5 || dayy == 6 || dayy == 7 || dayy == 8 || dayy == 9) {
            dayyy = String.valueOf(dayy);
            dayyy = "0" + dayyy;
        }
        int month = cal.get(Calendar.MONTH) + 1;
        int year = cal.get(Calendar.YEAR);
        date1.setText(year + "-" + month + "-" + dayyy);
        datee = date1.getText().toString();
        checkusertype();
        if (type2.getText().equals("admin")) {
            jMenuItem11.setEnabled(true);
            jMenuItem8.setEnabled(true);
            jMenuItem3.setEnabled(true);
            jMenuItem4.setEnabled(true);
            jMenuItem5.setEnabled(true);
            jMenuItem9.setEnabled(true);
            jMenuItem18.setEnabled(true);
            jMenuItem10.setEnabled(true);
            jMenuItem12.setEnabled(true);
            jMenuItem13.setEnabled(true);
            jMenuItem17.setEnabled(true);
            jMenuItem43.setEnabled(true);
            jMenuItem16.setEnabled(true);
            jMenuItem23.setEnabled(true);

        }
        main.setBackground(new Color(21, 31, 41));
        jDesktopPane1.removeAll();
        jDesktopPane1.add(peoplee).setVisible(true);

        jMenuBar1.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        type2 = new javax.swing.JLabel();
        name11 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        main = new javax.swing.JButton();
        book = new javax.swing.JButton();
        store = new javax.swing.JButton();
        buy = new javax.swing.JButton();
        msrofat = new javax.swing.JButton();
        attendance = new javax.swing.JButton();
        user = new javax.swing.JButton();
        day = new javax.swing.JLabel();
        year = new javax.swing.JLabel();
        day2 = new javax.swing.JLabel();
        month2 = new javax.swing.JLabel();
        year2 = new javax.swing.JLabel();
        date1 = new javax.swing.JLabel();
        month = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu10 = new javax.swing.JMenu();
        jMenuItem39 = new javax.swing.JMenuItem();
        additems = new javax.swing.JMenuItem();
        additems1 = new javax.swing.JMenuItem();
        jMenuItem38 = new javax.swing.JMenuItem();
        jMenu9 = new javax.swing.JMenu();
        jMenuItem40 = new javax.swing.JMenuItem();
        jMenuItem41 = new javax.swing.JMenuItem();
        jMenuItem42 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem17 = new javax.swing.JMenuItem();
        jMenuItem18 = new javax.swing.JMenuItem();
        jMenuItem23 = new javax.swing.JMenuItem();
        jMenuItem43 = new javax.swing.JMenuItem();
        jMenu11 = new javax.swing.JMenu();
        jMenuItem15 = new javax.swing.JMenuItem();
        jMenuItem14 = new javax.swing.JMenuItem();
        jMenuItem36 = new javax.swing.JMenuItem();
        jMenuItem37 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenuItem16 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenu6 = new javax.swing.JMenu();
        jMenuItem33 = new javax.swing.JMenuItem();
        jMenuItem34 = new javax.swing.JMenuItem();

        type2.setForeground(new java.awt.Color(255, 255, 255));
        type2.setText("jLabel1");

        name11.setBackground(new java.awt.Color(204, 153, 0));
        name11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        name11.setForeground(new java.awt.Color(255, 255, 255));
        name11.setText("jLabel2");

        setMaximumSize(new java.awt.Dimension(1326, 706));
        setMinimumSize(new java.awt.Dimension(1326, 706));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(1326, 706));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setMaximumSize(new java.awt.Dimension(1326, 706));
        jPanel1.setMinimumSize(new java.awt.Dimension(1326, 706));
        jPanel1.setPreferredSize(new java.awt.Dimension(1326, 706));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jDesktopPane1.setMaximumSize(new java.awt.Dimension(1060, 660));
        jDesktopPane1.setMinimumSize(new java.awt.Dimension(1060, 660));

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1060, Short.MAX_VALUE)
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 660, Short.MAX_VALUE)
        );

        jPanel1.add(jDesktopPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        main.setBackground(new java.awt.Color(102, 152, 205));
        main.setFont(new java.awt.Font("Arial", 1, 26)); // NOI18N
        main.setForeground(new java.awt.Color(255, 255, 255));
        main.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/playstation (1).png"))); // NOI18N
        main.setText(" الرئيسية");
        main.setPreferredSize(new java.awt.Dimension(169, 89));
        main.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainActionPerformed(evt);
            }
        });
        jPanel1.add(main, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 20, 240, 70));

        book.setBackground(new java.awt.Color(102, 152, 205));
        book.setFont(new java.awt.Font("Arial", 1, 26)); // NOI18N
        book.setForeground(new java.awt.Color(255, 255, 255));
        book.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/calendar.png"))); // NOI18N
        book.setText("الحجز");
        book.setPreferredSize(new java.awt.Dimension(169, 89));
        book.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookActionPerformed(evt);
            }
        });
        jPanel1.add(book, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 110, 240, 70));

        store.setBackground(new java.awt.Color(102, 152, 205));
        store.setFont(new java.awt.Font("Arial", 1, 26)); // NOI18N
        store.setForeground(new java.awt.Color(255, 255, 255));
        store.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/inventory.png"))); // NOI18N
        store.setText("المخزن");
        store.setPreferredSize(new java.awt.Dimension(169, 89));
        store.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                storeActionPerformed(evt);
            }
        });
        jPanel1.add(store, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 200, 240, 80));

        buy.setBackground(new java.awt.Color(102, 152, 205));
        buy.setFont(new java.awt.Font("Arial", 1, 26)); // NOI18N
        buy.setForeground(new java.awt.Color(255, 255, 255));
        buy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/shopping-bag.png"))); // NOI18N
        buy.setText("الشراء");
        buy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buyActionPerformed(evt);
            }
        });
        jPanel1.add(buy, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 300, 240, 80));

        msrofat.setBackground(new java.awt.Color(102, 152, 205));
        msrofat.setFont(new java.awt.Font("Arial", 1, 26)); // NOI18N
        msrofat.setForeground(new java.awt.Color(255, 255, 255));
        msrofat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/budget.png"))); // NOI18N
        msrofat.setText("مصروفات");
        msrofat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                msrofatActionPerformed(evt);
            }
        });
        jPanel1.add(msrofat, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 400, 240, 70));

        attendance.setBackground(new java.awt.Color(102, 152, 205));
        attendance.setFont(new java.awt.Font("Arial", 1, 26)); // NOI18N
        attendance.setForeground(new java.awt.Color(255, 255, 255));
        attendance.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/selling.png"))); // NOI18N
        attendance.setText("الحضور");
        attendance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attendanceActionPerformed(evt);
            }
        });
        jPanel1.add(attendance, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 490, 240, 80));

        user.setBackground(new java.awt.Color(102, 152, 205));
        user.setFont(new java.awt.Font("Arial", 1, 26)); // NOI18N
        user.setForeground(new java.awt.Color(255, 255, 255));
        user.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/rating.png"))); // NOI18N
        user.setText("المستخدمين");
        user.setPreferredSize(new java.awt.Dimension(169, 89));
        user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userActionPerformed(evt);
            }
        });
        jPanel1.add(user, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 590, 240, 80));

        day.setText("jLabel1");
        jPanel1.add(day, new org.netbeans.lib.awtextra.AbsoluteConstraints(1240, 40, -1, 10));

        year.setText("jLabel1");
        jPanel1.add(year, new org.netbeans.lib.awtextra.AbsoluteConstraints(1230, 40, -1, 10));

        day2.setText("jLabel1");
        jPanel1.add(day2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1260, 40, -1, -1));

        month2.setText("jLabel1");
        jPanel1.add(month2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1210, 40, -1, -1));

        year2.setText("jLabel1");
        jPanel1.add(year2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1270, 50, -1, -1));

        date1.setText("jLabel1");
        jPanel1.add(date1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1210, 50, -1, -1));

        month.setText("jLabel1");
        jPanel1.add(month, new org.netbeans.lib.awtextra.AbsoluteConstraints(1260, 70, -1, 0));

        jMenuBar1.setBackground(new java.awt.Color(102, 152, 205));

        jMenu10.setForeground(new java.awt.Color(255, 255, 255));
        jMenu10.setText("الاعدادات");
        jMenu10.setToolTipText("");
        jMenu10.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jMenu10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu10ActionPerformed(evt);
            }
        });

        jMenuItem39.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jMenuItem39.setText("الموظفين");
        jMenuItem39.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem39ActionPerformed(evt);
            }
        });
        jMenu10.add(jMenuItem39);

        additems.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        additems.setText("الموردين");
        additems.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                additemsActionPerformed(evt);
            }
        });
        jMenu10.add(additems);

        additems1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        additems1.setText("المخازن");
        additems1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                additems1ActionPerformed(evt);
            }
        });
        jMenu10.add(additems1);

        jMenuItem38.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jMenuItem38.setText("الرئيسية");
        jMenuItem38.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem38ActionPerformed(evt);
            }
        });
        jMenu10.add(jMenuItem38);

        jMenuBar1.add(jMenu10);

        jMenu9.setForeground(new java.awt.Color(255, 255, 255));
        jMenu9.setText("عمليات");
        jMenu9.setToolTipText("");
        jMenu9.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jMenu9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu9ActionPerformed(evt);
            }
        });

        jMenuItem40.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jMenuItem40.setText("سلف الموظفين");
        jMenuItem40.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem40ActionPerformed(evt);
            }
        });
        jMenu9.add(jMenuItem40);

        jMenuItem41.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jMenuItem41.setText("صرف من المخزن");
        jMenuItem41.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem41ActionPerformed(evt);
            }
        });
        jMenu9.add(jMenuItem41);

        jMenuItem42.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jMenuItem42.setText("اضافة جهاز");
        jMenuItem42.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem42ActionPerformed(evt);
            }
        });
        jMenu9.add(jMenuItem42);

        jMenuItem8.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jMenuItem8.setText("دفع فواتير");
        jMenuItem8.setEnabled(false);
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu9.add(jMenuItem8);

        jMenuItem17.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jMenuItem17.setText("تقفيل الحساب بالمنتجات");
        jMenuItem17.setEnabled(false);
        jMenuItem17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem17ActionPerformed(evt);
            }
        });
        jMenu9.add(jMenuItem17);

        jMenuItem18.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jMenuItem18.setText("تقفيل الحساب بالعمليات");
        jMenuItem18.setEnabled(false);
        jMenuItem18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem18ActionPerformed(evt);
            }
        });
        jMenu9.add(jMenuItem18);

        jMenuItem23.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jMenuItem23.setText("نسخه");
        jMenuItem23.setActionCommand("");
        jMenuItem23.setEnabled(false);
        jMenuItem23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem23ActionPerformed(evt);
            }
        });
        jMenu9.add(jMenuItem23);

        jMenuItem43.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jMenuItem43.setText("تعديل كلمة السر");
        jMenuItem43.setActionCommand("");
        jMenuItem43.setEnabled(false);
        jMenuItem43.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem43ActionPerformed(evt);
            }
        });
        jMenu9.add(jMenuItem43);

        jMenuBar1.add(jMenu9);

        jMenu11.setForeground(new java.awt.Color(255, 255, 255));
        jMenu11.setText("تقارير");
        jMenu11.setAlignmentX(0.0F);
        jMenu11.setAlignmentY(0.0F);
        jMenu11.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jMenu11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu11ActionPerformed(evt);
            }
        });

        jMenuItem15.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jMenuItem15.setText("الحجوزات");
        jMenuItem15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem15ActionPerformed(evt);
            }
        });
        jMenu11.add(jMenuItem15);

        jMenuItem14.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jMenuItem14.setText("تقرير عدد ساعات العمل");
        jMenuItem14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem14ActionPerformed(evt);
            }
        });
        jMenu11.add(jMenuItem14);

        jMenuItem36.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jMenuItem36.setText("تقرير المصروفات");
        jMenuItem36.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem36ActionPerformed(evt);
            }
        });
        jMenu11.add(jMenuItem36);

        jMenuItem37.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jMenuItem37.setText("تقرير نوع مصروف");
        jMenuItem37.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem37ActionPerformed(evt);
            }
        });
        jMenu11.add(jMenuItem37);

        jMenuItem3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jMenuItem3.setText("حصر المخزون");
        jMenuItem3.setEnabled(false);
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu11.add(jMenuItem3);

        jMenuItem4.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jMenuItem4.setText("تقرير مخزن");
        jMenuItem4.setEnabled(false);
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu11.add(jMenuItem4);

        jMenuItem5.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jMenuItem5.setText("المشتريات");
        jMenuItem5.setEnabled(false);
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu11.add(jMenuItem5);

        jMenuItem11.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jMenuItem11.setText("المديونات");
        jMenuItem11.setEnabled(false);
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu11.add(jMenuItem11);

        jMenuItem9.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jMenuItem9.setText("تفاصيل مستحقات الموردين");
        jMenuItem9.setEnabled(false);
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu11.add(jMenuItem9);

        jMenuItem10.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jMenuItem10.setText("تفاصيل مدفوعات الموردين");
        jMenuItem10.setEnabled(false);
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu11.add(jMenuItem10);

        jMenuItem12.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jMenuItem12.setText("تفاصيل مدفوعات مورد");
        jMenuItem12.setEnabled(false);
        jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem12ActionPerformed(evt);
            }
        });
        jMenu11.add(jMenuItem12);

        jMenuItem13.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jMenuItem13.setText("بيع الكافيتريا");
        jMenuItem13.setEnabled(false);
        jMenuItem13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem13ActionPerformed(evt);
            }
        });
        jMenu11.add(jMenuItem13);

        jMenuItem16.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jMenuItem16.setText("تقرير اوامر الصرف");
        jMenuItem16.setEnabled(false);
        jMenuItem16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem16ActionPerformed(evt);
            }
        });
        jMenu11.add(jMenuItem16);

        jMenuBar1.add(jMenu11);

        jMenu4.setForeground(new java.awt.Color(255, 255, 255));
        jMenu4.setText("القران");
        jMenu4.setToolTipText("");
        jMenu4.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jMenu4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu4ActionPerformed(evt);
            }
        });

        jMenu6.setText("العفاسي");
        jMenu6.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N

        jMenuItem33.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jMenuItem33.setText("الكهف");
        jMenuItem33.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem33ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem33);

        jMenuItem34.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jMenuItem34.setText("البقرة");
        jMenuItem34.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem34ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem34);

        jMenu4.add(jMenu6);

        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void mainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainActionPerformed
        main.setBackground(new Color(21, 31, 41));
        book.setBackground(new Color(102, 152, 205));
        user.setBackground(new Color(102, 152, 205));
        store.setBackground(new Color(102, 152, 205));
        attendance.setBackground(new Color(102, 152, 205));
        msrofat.setBackground(new Color(102, 152, 205));
        buy.setBackground(new Color(102, 152, 205));

        jDesktopPane1.removeAll();
        jDesktopPane1.add(peoplee).setVisible(true);
    }//GEN-LAST:event_mainActionPerformed

    private void bookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookActionPerformed
        main.setBackground(new Color(102, 152, 205));
        book.setBackground(new Color(21, 31, 41));
        user.setBackground(new Color(102, 152, 205));
        store.setBackground(new Color(102, 152, 205));
        attendance.setBackground(new Color(102, 152, 205));
        msrofat.setBackground(new Color(102, 152, 205));
        buy.setBackground(new Color(102, 152, 205));
        jDesktopPane1.removeAll();
        booking addd = new booking();
        jDesktopPane1.add(addd).setVisible(true);
    }//GEN-LAST:event_bookActionPerformed

    private void storeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_storeActionPerformed
        main.setBackground(new Color(102, 152, 205));
        book.setBackground(new Color(102, 152, 205));
        user.setBackground(new Color(102, 152, 205));
        store.setBackground(new Color(21, 31, 41));
        attendance.setBackground(new Color(102, 152, 205));
        msrofat.setBackground(new Color(102, 152, 205));
        buy.setBackground(new Color(102, 152, 205));
        try {
            jDesktopPane1.removeAll();
            storeitems addd = new storeitems(y);
            jDesktopPane1.add(addd).setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_storeActionPerformed

    private void buyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buyActionPerformed
        main.setBackground(new Color(102, 152, 205));
        book.setBackground(new Color(102, 152, 205));
        user.setBackground(new Color(102, 152, 205));
        store.setBackground(new Color(102, 152, 205));
        attendance.setBackground(new Color(102, 152, 205));
        msrofat.setBackground(new Color(102, 152, 205));
        buy.setBackground(new Color(21, 31, 41));
        try {
            jDesktopPane1.removeAll();
            additem addd = new additem();
            jDesktopPane1.add(addd).setVisible(true);
        } catch (IOException ex) {

        }

    }//GEN-LAST:event_buyActionPerformed

    private void msrofatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_msrofatActionPerformed
        main.setBackground(new Color(102, 152, 205));
        book.setBackground(new Color(102, 152, 205));
        user.setBackground(new Color(102, 152, 205));
        store.setBackground(new Color(102, 152, 205));
        attendance.setBackground(new Color(102, 152, 205));
        msrofat.setBackground(new Color(21, 31, 41));
        buy.setBackground(new Color(102, 152, 205));
        jDesktopPane1.removeAll();
        msrofat addd = new msrofat();
        jDesktopPane1.add(addd).setVisible(true);
    }//GEN-LAST:event_msrofatActionPerformed

    private void attendanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attendanceActionPerformed

        main.setBackground(new Color(102, 152, 205));
        book.setBackground(new Color(102, 152, 205));
        user.setBackground(new Color(102, 152, 205));
        store.setBackground(new Color(102, 152, 205));
        attendance.setBackground(new Color(21, 31, 41));
        msrofat.setBackground(new Color(102, 152, 205));
        buy.setBackground(new Color(102, 152, 205));
        try {
            jDesktopPane1.removeAll();
            employeeattendance addd = new employeeattendance();
            jDesktopPane1.add(addd).setVisible(true);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_attendanceActionPerformed

    private void userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userActionPerformed

        main.setBackground(new Color(102, 152, 205));
        book.setBackground(new Color(102, 152, 205));
        user.setBackground(new Color(21, 31, 41));
        store.setBackground(new Color(102, 152, 205));
        attendance.setBackground(new Color(102, 152, 205));
        msrofat.setBackground(new Color(102, 152, 205));
        buy.setBackground(new Color(102, 152, 205));
        jDesktopPane1.removeAll();
        adduser addd = new adduser();
        jDesktopPane1.add(addd).setVisible(true);
    }//GEN-LAST:event_userActionPerformed

    private void jMenuItem36ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem36ActionPerformed

        msrofatreport m = new msrofatreport();
        m.setVisible(true);
    }//GEN-LAST:event_jMenuItem36ActionPerformed

    private void jMenuItem37ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem37ActionPerformed

        msrofatreporttype m = new msrofatreporttype();
        m.setVisible(true);
    }//GEN-LAST:event_jMenuItem37ActionPerformed

    private void jMenu9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu9ActionPerformed

    private void jMenuItem33ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem33ActionPerformed
        PlayerFrame m = new PlayerFrame("D:\\cafe\\قران\\العفاسي\\الكهف.mp3", "D:\\قران\\العفاسي");
        m.setVisible(true);
    }//GEN-LAST:event_jMenuItem33ActionPerformed

    private void jMenuItem34ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem34ActionPerformed
        PlayerFrame m = new PlayerFrame("D:\\cafe\\قران\\العفاسي\\البقره.mp3", "D:\\قران\\العفاسي");
        m.setVisible(true);
    }//GEN-LAST:event_jMenuItem34ActionPerformed

    private void jMenu4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu4ActionPerformed

    }//GEN-LAST:event_jMenu4ActionPerformed

    private void jMenuItem38ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem38ActionPerformed
        LoginForm l = new LoginForm();
        l.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem38ActionPerformed

    private void jMenuItem39ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem39ActionPerformed
        jDesktopPane1.removeAll();
        employee addd = new employee();
        jDesktopPane1.add(addd).setVisible(true);
    }//GEN-LAST:event_jMenuItem39ActionPerformed

    private void jMenu10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu10ActionPerformed

    private void jMenuItem40ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem40ActionPerformed
        jDesktopPane1.removeAll();
        advancepayment addd = new advancepayment();
        jDesktopPane1.add(addd).setVisible(true);
    }//GEN-LAST:event_jMenuItem40ActionPerformed

    private void additemsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_additemsActionPerformed
        try {
            addsupplier m = new addsupplier();
            m.setVisible(true);
        } catch (ParseException ex) {

        }
    }//GEN-LAST:event_additemsActionPerformed

    private void additems1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_additems1ActionPerformed
        try {
            addstore m = new addstore();
            m.setVisible(true);
        } catch (ParseException ex) {

        }
    }//GEN-LAST:event_additems1ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        try {
            paysupplier m = new paysupplier();
            m.setVisible(true);
        } catch (ParseException ex) {

        }
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        InputStream in = null;
        try {

            in = this.getClass().getResourceAsStream("/reports/supplierneeded.jasper");
            Map<String, Object> para = new HashMap<String, Object>();
            JasperPrint j = JasperFillManager.fillReport(in, para, DBConnect.con);
            JasperViewer.viewReport(j, false);
        } catch (JRException ex) {

            JOptionPane.showMessageDialog(null, ex);
        } finally {
        }
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        InputStream in = null;
        try {

            in = this.getClass().getResourceAsStream("/reports/storeitems.jasper");
            String reportpath = "\\\\192.168.1.15\\sadam\\storeitems.jasper";
            Map<String, Object> para = new HashMap<String, Object>();
            JasperPrint j = JasperFillManager.fillReport(in, para, DBConnect.con);
            JasperViewer.viewReport(j, false);
        } catch (JRException ex) {

            JOptionPane.showMessageDialog(null, ex);
        } finally {
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        storetype m = new storetype();
        m.setVisible(true);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        storebuyreport m = new storebuyreport();
        m.setVisible(true);
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        supplieramountdetails m = new supplieramountdetails();
        m.setVisible(true);
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        supplieramountdetailspayed m = new supplieramountdetailspayed();
        m.setVisible(true);
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem12ActionPerformed
        supplierpayed m = new supplierpayed();
        m.setVisible(true);
    }//GEN-LAST:event_jMenuItem12ActionPerformed

    private void jMenuItem13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem13ActionPerformed
        sellreporttype m = new sellreporttype();
        m.setVisible(true);
    }//GEN-LAST:event_jMenuItem13ActionPerformed

    private void jMenu11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu11ActionPerformed

    private void jMenuItem14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem14ActionPerformed
        attendaceh m = new attendaceh();
        m.setVisible(true);
    }//GEN-LAST:event_jMenuItem14ActionPerformed

    private void jMenuItem41ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem41ActionPerformed
        jDesktopPane1.removeAll();
        moveorder addd = new moveorder();
        jDesktopPane1.add(addd).setVisible(true);
    }//GEN-LAST:event_jMenuItem41ActionPerformed

    private void jMenuItem15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem15ActionPerformed
        bookingreport m = new bookingreport();
        m.setVisible(true);
    }//GEN-LAST:event_jMenuItem15ActionPerformed

    private void jMenuItem16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem16ActionPerformed

        storesellreport m = new storesellreport();
        m.setVisible(true);
    }//GEN-LAST:event_jMenuItem16ActionPerformed

    private void jMenuItem42ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem42ActionPerformed
        jDesktopPane1.removeAll();
        addgames addd = new addgames();
        jDesktopPane1.add(addd).setVisible(true);
    }//GEN-LAST:event_jMenuItem42ActionPerformed

    private void jMenuItem17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem17ActionPerformed
        TimeZone tz = TimeZone.getTimeZone("GMT+02");
        Calendar c = Calendar.getInstance(tz);
        String time = String.format("%02d", c.get(Calendar.HOUR_OF_DAY)) + ":"
                + String.format("%02d", c.get(Calendar.MINUTE));
        fulldatee = datee + " " + time;
        java.util.Date date = cal.getTime();
        int mHour = date.getHours();
        System.out.print(mHour);
        if (mHour > 0 && mHour < 6) {
            int monthh = cal.get(Calendar.MONTH) + 1;
            int yearr = cal.get(Calendar.YEAR);
            int dayy = cal.get(Calendar.DAY_OF_MONTH) - 1;
            int dayyyy = cal.get(Calendar.DAY_OF_MONTH);
            dayyy = String.valueOf(dayy);
            if (dayy == 1 || dayy == 2 || dayy == 3 || dayy == 4
                    || dayy == 5 || dayy == 6 || dayy == 7 || dayy == 8 || dayy == 9) {
                dayyy = String.valueOf(dayy);
                dayyy = "0" + dayyy;
            }
            dayyy2 = String.valueOf(dayyyy);
            if (dayyyy == 1 || dayyyy == 2 || dayyyy == 3 || dayyyy == 4
                    || dayyyy == 5 || dayyyy == 6 || dayyyy == 7 || dayyyy == 8 || dayyyy == 9) {
                dayyy2 = String.valueOf(dayyyy);
                dayyy2 = "0" + dayyy2;
            }
            day.setText(dayyy);
            month.setText(Integer.toString(monthh));
            year.setText(Integer.toString(yearr));
            day2.setText(dayyy2);
            month2.setText(Integer.toString(monthh));
            year2.setText(Integer.toString(yearr));
            String from = year.getText() + "-" + month.getText() + "-" + day.getText();
            String to = year2.getText() + "-" + month2.getText() + "-" + day2.getText();
            InputStream in = null;
            try {

                in = this.getClass().getResourceAsStream("/reports/tkfel.jasper");
                Map<String, Object> para = new HashMap<String, Object>();
                para.put("from", from);
                para.put("to", to);
                para.put("fulldatee", fulldatee);

                JasperPrint j = JasperFillManager.fillReport(in, para, DBConnect.con);
                //  ;   JasperViewer.viewReport(j,false);
                JasperViewer.viewReport(j, false);
                String sql = "UPDATE cafe.roomitems SET mark = 'Yes' where  date BETWEEN  CAST('" + from + "' AS DATE) AND  CAST('" + to + "' AS DATE) and mark = 'No'";
                pst = (PreparedStatement) DBConnect.con.prepareStatement(sql);
                pst.executeUpdate();

            } catch (JRException ex) {
            } catch (SQLException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
            }

        } else {
            int monthh = cal.get(Calendar.MONTH) + 1;
            int yearr = cal.get(Calendar.YEAR);
            int dayy = cal.get(Calendar.DAY_OF_MONTH);
            dayyy = String.valueOf(dayy);
            if (dayy == 1 || dayy == 2 || dayy == 3 || dayy == 4
                    || dayy == 5 || dayy == 6 || dayy == 7 || dayy == 8 || dayy == 9) {
                dayyy = String.valueOf(dayy);
                dayyy = "0" + dayyy;
            }
            day.setText(dayyy);
            month.setText(Integer.toString(monthh));
            year.setText(Integer.toString(yearr));
            day2.setText(dayyy);
            month2.setText(Integer.toString(monthh));
            year2.setText(Integer.toString(yearr));
            String from = year.getText() + "-" + month.getText() + "-" + day.getText();
            String to = year2.getText() + "-" + month2.getText() + "-" + day2.getText();
            InputStream in = null;
            try {

                in = this.getClass().getResourceAsStream("/reports/tkfel.jasper");
                Map<String, Object> para = new HashMap<String, Object>();
                para.put("from", from);
                para.put("to", to);
                para.put("fulldatee", fulldatee);

                JasperPrint j = JasperFillManager.fillReport(in, para, DBConnect.con);
                //  ;   JasperViewer.viewReport(j,false);
                JasperViewer.viewReport(j, false);
                String sql = "UPDATE cafe.roomitems SET mark = 'Yes' where  date BETWEEN  CAST('" + from + "' AS DATE) AND  CAST('" + to + "' AS DATE) and mark = 'No'";
                pst = (PreparedStatement) DBConnect.con.prepareStatement(sql);
                pst.executeUpdate();
            } catch (JRException ex) {
            } catch (SQLException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
            }

        }
    }//GEN-LAST:event_jMenuItem17ActionPerformed

    private void jMenuItem18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem18ActionPerformed
        TimeZone tz = TimeZone.getTimeZone("GMT+02");
        Calendar c = Calendar.getInstance(tz);
        String time = String.format("%02d", c.get(Calendar.HOUR_OF_DAY)) + ":"
                + String.format("%02d", c.get(Calendar.MINUTE));
        fulldatee = datee + " " + time;
        java.util.Date date = cal.getTime();
        int mHour = date.getHours();
        System.out.print(mHour);
        if (mHour > 0 && mHour < 6) {
            int monthh = cal.get(Calendar.MONTH) + 1;
            int yearr = cal.get(Calendar.YEAR);
            int dayy = cal.get(Calendar.DAY_OF_MONTH) - 1;
            int dayyyy = cal.get(Calendar.DAY_OF_MONTH);
            dayyy = String.valueOf(dayy);
            if (dayy == 1 || dayy == 2 || dayy == 3 || dayy == 4
                    || dayy == 5 || dayy == 6 || dayy == 7 || dayy == 8 || dayy == 9) {
                dayyy = String.valueOf(dayy);
                dayyy = "0" + dayyy;
            }
            dayyy2 = String.valueOf(dayyyy);
            if (dayyyy == 1 || dayyyy == 2 || dayyyy == 3 || dayyyy == 4
                    || dayyyy == 5 || dayyyy == 6 || dayyyy == 7 || dayyyy == 8 || dayyyy == 9) {
                dayyy2 = String.valueOf(dayyyy);
                dayyy2 = "0" + dayyy2;
            }
            day.setText(dayyy);
            month.setText(Integer.toString(monthh));
            year.setText(Integer.toString(yearr));
            day2.setText(dayyy2);
            month2.setText(Integer.toString(monthh));
            year2.setText(Integer.toString(yearr));
            String from = year.getText() + "-" + month.getText() + "-" + day.getText();
            String to = year2.getText() + "-" + month2.getText() + "-" + day2.getText();
            InputStream in = null;
            try {

                in = this.getClass().getResourceAsStream("/reports/tkfelbyroom.jasper");
                Map<String, Object> para = new HashMap<String, Object>();
                para.put("from", from);
                para.put("to", to);
                para.put("fulldatee", fulldatee);

                JasperPrint j = JasperFillManager.fillReport(in, para, DBConnect.con);
                //  ;   JasperViewer.viewReport(j,false);
                JasperViewer.viewReport(j, false);
                String sql = "UPDATE cafe.room SET tkfel = 'Yes' WHERE  date BETWEEN  CAST('" + from + "' AS DATE) AND  CAST('" + to + "' AS DATE) and tkfel = 'No'";
                pst = (PreparedStatement) DBConnect.con.prepareStatement(sql);
                pst.executeUpdate();
            } catch (JRException ex) {
            } catch (SQLException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
            }

        } else {
            int monthh = cal.get(Calendar.MONTH) + 1;
            int yearr = cal.get(Calendar.YEAR);
            int dayy = cal.get(Calendar.DAY_OF_MONTH);
            dayyy = String.valueOf(dayy);
            if (dayy == 1 || dayy == 2 || dayy == 3 || dayy == 4
                    || dayy == 5 || dayy == 6 || dayy == 7 || dayy == 8 || dayy == 9) {
                dayyy = String.valueOf(dayy);
                dayyy = "0" + dayyy;
            }
            day.setText(dayyy);
            month.setText(Integer.toString(monthh));
            year.setText(Integer.toString(yearr));
            day2.setText(dayyy);
            month2.setText(Integer.toString(monthh));
            year2.setText(Integer.toString(yearr));
            String from = year.getText() + "-" + month.getText() + "-" + day.getText();
            String to = year2.getText() + "-" + month2.getText() + "-" + day2.getText();
            InputStream in = null;
            try {

                in = this.getClass().getResourceAsStream("/reports/tkfelbyroom.jasper");
                Map<String, Object> para = new HashMap<String, Object>();
                para.put("from", from);
                para.put("to", to);
                para.put("fulldatee", fulldatee);

                JasperPrint j = JasperFillManager.fillReport(in, para, DBConnect.con);
                //  ;   JasperViewer.viewReport(j,false);
                JasperViewer.viewReport(j, false);
                String sql = "UPDATE cafe.room SET tkfel = 'Yes' WHERE  date BETWEEN  CAST('" + from + "' AS DATE) AND  CAST('" + to + "' AS DATE) and tkfel = 'No'";
                pst = (PreparedStatement) DBConnect.con.prepareStatement(sql);
                pst.executeUpdate();
            } catch (JRException ex) {
            } catch (SQLException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
            }

        }
    }//GEN-LAST:event_jMenuItem18ActionPerformed

    private void jMenuItem23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem23ActionPerformed

        try {
            Backupdbtosql();
        } catch (InterruptedException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem23ActionPerformed

    private void jMenuItem43ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem43ActionPerformed
        try {
            editpassword m = new editpassword();
            m.setVisible(true);
        } catch (ParseException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem43ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem additems;
    private javax.swing.JMenuItem additems1;
    public javax.swing.JButton attendance;
    public javax.swing.JButton book;
    public javax.swing.JButton buy;
    private javax.swing.JLabel date1;
    private javax.swing.JLabel day;
    private javax.swing.JLabel day2;
    public javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JMenu jMenu10;
    private javax.swing.JMenu jMenu11;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem15;
    private javax.swing.JMenuItem jMenuItem16;
    private javax.swing.JMenuItem jMenuItem17;
    private javax.swing.JMenuItem jMenuItem18;
    private javax.swing.JMenuItem jMenuItem23;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem33;
    private javax.swing.JMenuItem jMenuItem34;
    private javax.swing.JMenuItem jMenuItem36;
    private javax.swing.JMenuItem jMenuItem37;
    private javax.swing.JMenuItem jMenuItem38;
    private javax.swing.JMenuItem jMenuItem39;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem40;
    private javax.swing.JMenuItem jMenuItem41;
    private javax.swing.JMenuItem jMenuItem42;
    private javax.swing.JMenuItem jMenuItem43;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    public javax.swing.JButton main;
    private javax.swing.JLabel month;
    private javax.swing.JLabel month2;
    public javax.swing.JButton msrofat;
    private javax.swing.JLabel name11;
    public javax.swing.JButton store;
    private javax.swing.JLabel type2;
    public javax.swing.JButton user;
    private javax.swing.JLabel year;
    private javax.swing.JLabel year2;
    // End of variables declaration//GEN-END:variables

    public void checkusertype() {
        try {
            String sqll = "SELECT type from cafe.users WHERE username='" + name11.getText() + "'";
            pst = (PreparedStatement) DBConnect.con.prepareStatement(sqll);
            rs = pst.executeQuery();
            while (rs.next()) {
                type = rs.getString("type");
                type2.setText(type);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);

        }
    }
public static void Backupdbtosql() throws InterruptedException {
        try {
            String executeCmd = "";
            String dbUser = "root";
            String dbPass = "root43442244";
            executeCmd = "C:\\Program Files\\MySQL\\MySQL Server 8.0\\bin\\mysqldump -u "+dbUser+" -p"+dbPass+" cafe -r D:\\cafe\\backup.sql";
            Process runtimeProcess =Runtime.getRuntime().exec(executeCmd);
            int processComplete = runtimeProcess.waitFor();
            if(processComplete == 0){
                System.out.println("Backup taken successfully");
            } else {
                System.out.println("Could not take mysql backup");
            }       } catch (IOException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
}
}
